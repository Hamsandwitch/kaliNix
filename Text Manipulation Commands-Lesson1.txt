



    .__________________________________________________.
    |~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|
    |~~~~~_|---------   ------------   ---------|_~~~~~|
	|~~~~+_  Wordlist   Manipulation   Commands  _+~~~~|
	|~~~~~|_---------   ------------   --------_| ~~~~~|
	====================================================


|------------------|
| #!! REMEMBER !!# |
|------------------|
   |^^|
   |^^# If working with LOTS of text files, or very large text files, you will want to keep your RAM size in mind. Piping 100GB worth of text through the aforementioned string
   |^^# of commands would more than likely cause a system lock-up\crash at some point if you're hurting in the RAM dept. When working with large or multiple files like that,
   |^^# its useful to do one command/section at a time, reboot (clearing your RAM in the process), then continue with the next step, reboot, etc.
	
	
	
_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




 This command will add the file *FileOne.txt* into *FileTwo.txt*




        ~$cat FileOne.txt >> FileOne.txt





_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------






this will combine files 1,2,and 3 into the big file. Now when you want to add a file simply double the arrow




        ~$cat file1.txt file2.txt file3.txt > bigfile.txt







_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        
        
        ~$cat *.txt > /root/bigfile.txt




This will do all the files ending in .txt and can be used for whatever files you need.



_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





       ~$cat bigfile.txt | sort | uniq > newbigfile.txt



this will alphabetize the list and sort out the doubles





_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



      
      ~$cat passwordlist.txt | pw-inspector -m 8 -M 63 > wpaList.txt
      
      
      

This will make your list WPA/WPA2 compatiable by deleting words less than 8 chars and more than 63 








_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

___________________________________________________________
|**| USING ' sed ' COMMAND TO INCREASE LIST EFFICIENCY |**|




## This is a simple (long) string, using the *sed* command, to remove any entries in a text document that contain the same CAPITOL letter next to one another.

(no piped output.)



   ~#sed -e '/AA/d' -e '/BB/d' -e '/CC/d' -e '/DD/d' -e '/EE/d' -e '/FF/d' -e '/GG/d' -e '/HH/d' -e '/II/d' -e '/JJ/d' -e '/KK/d' -e '/LL/d' -e '/MM/d' -e '/NN/d' -e '/OO/d' -e '/PP/d' -e '/QQ/d' -e '/RR/d' -e '/SS/d' -e '/TT/d' -e '/UU/d' -e '/VV/d' -e '/WW/d' -e '/XX/d' -e '/YY/d' -e '/ZZ/d'





#!# (Example: Out of: | POL, POOL, pool | -> POL and pool would be allowed, while POOL would be removed.) 

_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------









|--------------------------------------------------------------------------------------------------------------------------------------|
|!!!!!\                                                                                                                                |
|!!!!!#>  In the following examples, the previous command will be refered to as {sedCMD} - in order to increase overall readability.   |
|!!!!!/                                                                                                                                |
|--------------------------------------------------------------------------------------------------------------------------------------|











 For example, it could be used to follow (after the pike) a simple command, such as:

                                      $ cat *.txt | {sedCMD} > new.txt




Or it could be used following a more complicated string of commands.
	
	
    A string of such commands could look something like this:


   $ cat *.txt | sort | uniq | pw-inspector -m 8 -M 63 | {sedCMD} > new.txt



|------------------|
| #!! REMEMBER !!# |
|------------------|
   |^^|
   |^^# If working with LOTS of text files, or very large text files, you will want to keep your RAM size in mind. Piping 100GB worth of text through the aforementioned string
   |^^# of commands would more than likely cause a system lock-up\crash at some point if you're hurting in the RAM dept. When working with large or multiple files like that,
   |^^# its useful to do one command/section at a time, reboot (clearing your RAM in the process), then continue with the next step, reboot, etc.

----------------------------------------------------------------------------|
----------------------------------------------------------------------------|
      

## As a final example, this similar string would remove any entries that contain the same number repeated 3 times. (So, 1113 would be removed, but 1131 would not.) 

  #!#String example:

                sed -e '/111/d' -e '/222/d' -e '/333/d' -e '/444/d' -e '/555/d' -e '/666/d' -e '/777/d' -e '/888/d' -e '/999/d' -e '/000/d'

:)
_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
_____________________________________________________________________________________________________________________________________________________________________________________________________________________
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

						
						
						
						
						
						
						
						
						
						
						
						
						
						
#!bin/bash
echo "


"
echo "                        ___________________________________"
echo "                        |          ~\                     |"
echo "                        |         )\`.).                   |"
echo "                        |       )\`\`)\`\`)~\                 |"
echo "                        |       ).-'.-')|)                |"
echo "                        |     |-).-).-'_'-/               |"
echo "                        |~~~~ \ \`---0-'  /~~~~\`~~~~\`~~~~~\`|"
echo "                        |~~~~~ '---.,___/~~~~~~~\`~~~~~\`~~~|"
echo "                        |~~~~~~~~~~~~~~~~~~~~~~\`~~~~~\`~~~~|"
echo "                        |++++++\*=================*/++++++|"
echo "                        |+^+^+^+\|  Have  Phun!! |/+^+^+^+|"
echo "                        |^+^+^+^+|===============|+^+^+^+^|"
echo "                        |=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=|"
echo "                        | All Your Base Are Belong To Us. |"
echo "                        |~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~!~|"
echo "                        |~~~~~~~~~~~~~~~~ $ (asp32 $ ~~~~~|"
echo "                        ===================|^---^-|========"
sleep 5
exit
						
						
						
						
						
						
						
						